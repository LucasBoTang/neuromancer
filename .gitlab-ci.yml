# CI constraints for every branch
workflow:
  rules:
    # Only run if source is an open merge request or a branch push
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

.pnnl_after_script_template: &pnnl_after_script_definition
  after_script:
    - |
      export WORKDIR="$HOME/gitlab/${CI_PIPELINE_ID}/${MY_CLUSTER}/"
      if [[ -f "$WORKDIR/jobid" ]]; then
        jobid=$(cat "$WORKDIR/jobid")
        scancel $jobid
      fi
      rm -rf $WORKDIR
      rm -rf ./*

.pnnl_script_template: &pnnl_script_definition
  script:
    - |
      set -xv
      #
      #  NOTES:  WORKDIR is on constance/marianas/newell
      #          ./      is only on the Kubernetes instance
      #
      export WORKDIR="$HOME/gitlab/${CI_PIPELINE_ID}/${MY_CLUSTER}"

      if [[ ! -d "$WORKDIR" ]]; then
        mkdir -p "$WORKDIR"
        cp -R ./* "$WORKDIR"
      fi

      # Call script to find idle node
      export SLURM_Q=`perl ./buildsystem/findIdleDLNodes.pl`

      cd "$WORKDIR"
      # echo submitting batch job
      [ -f output ] && rm output
      touch output
      tail -f output &
      tailpid=$!
      jobid=$(sbatch -A DADAIST --export=ALL --exclusive -p $SLURM_Q -o output -e output -t 2:00:00 $WORKDIR/tests.sh)
      export jobid=$(echo $jobid | cut -f4 -d' ')
      echo $jobid > "$WORKDIR/jobid"

      res=1
      while :;
      do
        if [[ "$(awk 'BEGIN{i=0}/BUILD_STATUS/{i++}END{print i}' output)" != "0" ]]; then
          kill $tailpid
          echo 'Last tail of build output:'
          tail -n 200 output
          res=$(grep BUILD_STATUS output | tail -n 1 | cut -f2 -d':')
          break
        fi
        sleep 30
      done
      echo "Finished batch job with exit code: $res"
      rm "$WORKDIR/jobid"
      exit $res


.pnnl_tags_template: &pnnl_tags_definition
  tags:
    - dadaist
    - ikp
    - k8s
    - marianas

.pnnl_nohpc_template: &pnnl_nohpc_definition
  tags:
    - dadaist
    - ikp
    - k8s
    - basic

.pnnl_rules_template: &pnnl_rules_definition
  rules:
    - if: '$CI_PROJECT_ROOT_NAMESPACE == "dadaist"'

stages:
  - build
  - docs

# PNNL CI
build_on_marianas:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    SLURM_Q: "dlt_shared"
    CLUSTER: "marianas"
  <<: *pnnl_tags_definition
  <<: *pnnl_script_definition
  <<: *pnnl_rules_definition
# ---

# Documentation Generation
pages:
  stage: docs
  allow_failure: true
  image: ubuntu:20.04
  script:
  - set -x
  - apt update && apt install -y python3 python3-pip
  - pip install -U sphinx
  - pip install sphinx_rtd_theme
  - sphinx-build -b html . public
  artifacts:
    paths:
    - public
  <<: *pnnl_nohpc_definition
  <<: *pnnl_rules_definition
# ---
